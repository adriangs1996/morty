# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `fiber-storage` gem.
# Please instead update this file by running `bin/tapioca gem fiber-storage`.


# source://fiber-storage//lib/fiber/storage.rb#9
class Fiber
  extend ::Fiber::FixBorkedKeys

  class << self
    # Get a value from the current fiber's storage.
    #
    # @raise [TypeError]
    #
    # source://fiber-storage//lib/fiber/storage.rb#72
    def [](key); end

    # Set a value in the current fiber's storage.
    #
    # @raise [TypeError]
    #
    # source://fiber-storage//lib/fiber/storage.rb#79
    def []=(key, value); end

    # Whether the fiber storage has buggy keys. Unfortunately the original implementation of fiber storage was broken, this method detects the bug and is used to apply a fix.
    #
    # source://fiber-storage//lib/fiber/storage.rb#60
    def __borked_keys__; end
  end
end

# This is a fix for the original implementation of fiber storage which incorrectly handled non-dynamic symbol keys.
#
# source://fiber-storage//lib/fiber/storage.rb#70
module Fiber::FixBorkedKeys
  # Lookup the value for the key, ensuring the symbol is dynamic.
  #
  # @raise [TypeError]
  #
  # source://fiber-storage//lib/fiber/storage.rb#72
  def [](key); end

  # Assign the value to the key, ensuring the symbol is dynamic.
  #
  # @raise [TypeError]
  #
  # source://fiber-storage//lib/fiber/storage.rb#79
  def []=(key, value); end
end

# Provides compatibility shims for fiber storage.
#
# source://fiber-storage//lib/fiber/storage.rb#11
module Fiber::Storage
  # Initialize the fiber with the given storage.
  #
  # source://fiber-storage//lib/fiber/storage.rb#13
  def initialize(*arguments, storage: T.unsafe(nil), **options, &block); end

  # @private
  #
  # source://fiber-storage//lib/fiber/storage.rb#37
  def __storage__; end

  # The storage associated with this fiber.
  #
  # source://fiber-storage//lib/fiber/storage.rb#32
  def storage; end

  # Set the storage associated with this fiber, clearing any previous storage.
  #
  # source://fiber-storage//lib/fiber/storage.rb#27
  def storage=(hash); end
end
