# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `falcon` gem.
# Please instead update this file by running `bin/tapioca gem falcon`.


# source://falcon//lib/falcon/version.rb#6
module Falcon; end

# source://falcon//lib/falcon/middleware/verbose.rb#10
module Falcon::Middleware; end

# A HTTP middleware for logging requests and responses.
#
# source://falcon//lib/falcon/middleware/verbose.rb#12
class Falcon::Middleware::Verbose < ::Protocol::HTTP::Middleware
  # Initialize the verbose middleware.
  #
  # @return [Verbose] a new instance of Verbose
  #
  # source://falcon//lib/falcon/middleware/verbose.rb#16
  def initialize(app, logger = T.unsafe(nil)); end

  # Log details of the incoming request.
  #
  # source://falcon//lib/falcon/middleware/verbose.rb#23
  def annotate(request); end

  # Log details of the incoming request using {annotate} and wrap the response to log response details too.
  #
  # source://falcon//lib/falcon/middleware/verbose.rb#33
  def call(request); end
end

# A server listening on a specific endpoint, hosting a specific middleware.
#
# source://falcon//lib/falcon/server.rb#18
class Falcon::Server < ::Async::HTTP::Server
  class << self
    # Wrap a rack application into a middleware suitable the server.
    #
    # source://falcon//lib/falcon/server.rb#23
    def middleware(rack_app, verbose: T.unsafe(nil), cache: T.unsafe(nil)); end
  end
end

# source://falcon//lib/falcon/version.rb#7
Falcon::VERSION = T.let(T.unsafe(nil), String)
